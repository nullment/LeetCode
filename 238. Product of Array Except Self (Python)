class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        # O(n) Runtime
        
        prefix_product = 1 
        suffix_product = 1

        product = [1] * len(nums)

        for i in range(len(nums)):
            product[i] *= prefix_product
            prefix_product *= nums[i]

        for i in range(len(nums) - 1, -1, -1):
            product[i] *= suffix_product
            suffix_product *= nums[i]
        
        return product


        # O(n^2) Runtime
        #
        # copied_nums = nums.copy()
        # i = 0
        # for i in nums:
        #     copied_nums.remove(i)
        #     product = reduce((lambda x, y: x * y), copied_nums)
        #     list.append(product)
        #     copied_nums = nums.copy()
        # return list

